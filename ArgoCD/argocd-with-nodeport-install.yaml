apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: argocd-server
  namespace: argocd
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: argocd
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8080
    nodePort: 32080
    protocol: TCP
  - port: 443
    targetPort: 8080
    nodePort: 32443
    protocol: TCP
  selector:
    app.kubernetes.io/name: argocd-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-server
    spec:
      serviceAccountName: argocd-server
      containers:
      - name: argocd-server
        image: quay.io/argoproj/argocd:v2.7.7
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: ARGOCD_SERVER_INSECURE
          value: "true"
        - name: ARGOCD_SERVER_BASEHREF
          value: "/"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-repo-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-repo-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-repo-server
    spec:
      containers:
      - name: argocd-repo-server
        image: quay.io/argoproj/argocd:v2.7.7
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-dex-server
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-dex-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-dex-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-dex-server
    spec:
      containers:
      - name: argocd-dex-server
        image: quay.io/argoproj/argocd:v2.7.7
        imagePullPolicy: Always
        ports:
        - containerPort: 5556
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-application-controller
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd-application-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-application-controller
    spec:
      containers:
      - name: argocd-application-controller
        image: quay.io/argoproj/argocd:v2.7.7
        imagePullPolicy: Always
        command:
          - argocd-application-controller
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  selector:
    app.kubernetes.io/name: argocd-repo-server
  ports:
    - name: server
      port: 8081
      targetPort: 8081
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-dex-server
  namespace: argocd
spec:
  selector:
    app.kubernetes.io/name: argocd-dex-server
  ports:
    - name: http
      port: 5556
      targetPort: 5556
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-application-controller
  namespace: argocd
spec:
  selector:
    app.kubernetes.io/name: argocd-application-controller
  ports:
    - name: server
      port: 8082
      targetPort: 8082
